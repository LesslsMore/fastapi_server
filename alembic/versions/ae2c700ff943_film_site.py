"""film_site

Revision ID: ae2c700ff943
Revises: 
Create Date: 2025-09-13 09:23:55.165114

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ae2c700ff943'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_search_deleted_at'), table_name='search')
    op.drop_table('search')
    op.drop_index(op.f('idx_users_deleted_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('idx_failure_records_deleted_at'), table_name='failure_records')
    op.drop_table('failure_records')
    op.drop_index(op.f('idx_files_deleted_at'), table_name='files')
    op.drop_table('files')
    op.drop_table('mac_vod')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mac_vod',
    sa.Column('vod_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('type_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('type_id1', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_sub', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_status', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_letter', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_color', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_tag', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_class', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pic', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pic_thumb', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pic_slide', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pic_screenshot', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_actor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_director', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_writer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_behind', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_blurb', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pub_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_total', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_serial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_tv', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_weekday', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_area', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_lang', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_year', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_version', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_author', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_jump_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_tpl', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_tpl_play', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_tpl_down', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_is_end', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_lock', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_level', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_copyright', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_points', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_points_play', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_points_down', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_hits', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_hits_day', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_hits_week', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_hits_month', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_duration', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_up', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_down', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_score', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_score_all', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_score_num', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_time', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_time_add', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_time_hits', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_time_make', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_try_see', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_dou_ban_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_dou_ban_score', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_re_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_rel_vod', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_rel_art', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pwd', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pwd_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pwd_play', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pwd_play_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pwd_down', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_pwd_down_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_play_from', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_play_server', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_play_note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_play_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_down_from', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_down_server', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_down_note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_down_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_plot', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vod_plot_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vod_plot_detail', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('vod_id', name=op.f('mac_vod_pkey'))
    )
    op.create_table('files',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('link', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('relevance_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('file_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('files_pkey'))
    )
    op.create_index(op.f('idx_files_deleted_at'), 'files', ['deleted_at'], unique=False)
    op.create_table('failure_records',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('origin_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('origin_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uri', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('collect_type', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('page_number', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('hour', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('cause', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('failure_records_pkey'))
    )
    op.create_index(op.f('idx_failure_records_deleted_at'), 'failure_records', ['deleted_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('user_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('password', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('salt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nick_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('avatar', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('reserve1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reserve2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reserve3', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey'))
    )
    op.create_index(op.f('idx_users_deleted_at'), 'users', ['deleted_at'], unique=False)
    op.create_table('search',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('mid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('cid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('pid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sub_title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('c_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_tag', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('area', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('language', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('year', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('initial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('score', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('update_stamp', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('hits', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('release_stamp', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('search_pkey'))
    )
    op.create_index(op.f('idx_search_deleted_at'), 'search', ['deleted_at'], unique=False)
    # ### end Alembic commands ###
